// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]

}

datasource db {
  provider = "mysql"
  // url      = "mysql://user:user@dev.erp.com:3307/backend"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PLACED
  PROCESS
  COMPLETED
  CANCELED
}

enum OrderType {
  INCOMING
  OUTCOMING
}

enum Product {
  WHEAT
  FLOUR
  BREAD
}

model User {
  id           Int      @id @default(autoincrement())
  firstName    String?
  lastName     String?
  email        String   @unique
  password     String
  role         UserRole @default(USER)
  refreshToken String   @db.VarChar(255)
  mfa          MFA?
  mfaId        Int?
  address      String?
}

model MFA {
  id         Int     @id @default(autoincrement())
  user       User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId     Int     @unique
  status     Boolean
  verified   Boolean
  ascii      String  @db.VarChar(255)
  hex        String  @db.VarChar(255)
  base32     String  @db.VarChar(255)
  otpAuthUrl String  @db.VarChar(255)
  qr         String  @db.Text()
}

model AvailableBlockchainAddress {
  id         Int                        @id @default(autoincrement())
  address    String                     @unique @db.VarChar(255)
  assignAddr AssignedBlockchainAddress?
}

model AssignedBlockchainAddress {
  id      Int                        @id @default(autoincrement())
  avblAdr AvailableBlockchainAddress @relation(fields: [address], references: [address], onDelete: Cascade, onUpdate: Cascade)
  address String                     @unique
  email   String                     @unique
}

enum UserRole {
  ADMIN
  MODERATOR
  USER
}

model Customer {
  id        Int        @id @default(autoincrement())
  name      String?
  email     String?    @unique
  address   String?    @unique
  inventory Inventory?
  order     Order[]
}

model Inventory {
  id         Int        @id @default(autoincrement())
  customer   Customer   @relation(fields: [customerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  customerId Int        @unique
  resources  Resource[]
}

model Resource {
  id          Int       @id @default(autoincrement())
  inventory   Inventory @relation(fields: [inventoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  inventoryId Int
  order       Order     @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  orderId     Int
  title       Product   @default(WHEAT)
  amount      Int
}

model Order {
  id          Int         @id @default(autoincrement())
  customer    Customer    @relation(fields: [customerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  customerId  Int
  list        Resource[]
  createdAt   DateTime    @default(now())
  deliveredAt DateTime?
  type        OrderType
  status      OrderStatus @default(PLACED)
  transaction Receipt?
}

model Receipt {
  id          Int    @id @default(autoincrement())
  order       Order  @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  orderId     Int    @unique
  to          String
  from        String
  blockHash   String
  blockNumber Int
  status      Int
  hash        String @unique
}
